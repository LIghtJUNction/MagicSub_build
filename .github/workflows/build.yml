name: Build Node.js for Android ARM64

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 */6 * * *'  # 每6小时检查一次
  push:
    paths:
      - '.github/workflows/build.yml'  # 当工作流文件更改时触发
    branches:
      - master
  
jobs:
  check-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check latest Node.js version
        id: check
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/nodejs/node/releases/latest | jq -r .tag_name)
          LOCAL_TAG=$(cat .last_built_version 2>/dev/null || echo "none")
          if [ "$LATEST_TAG" != "$LOCAL_TAG" ]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
            echo "$LATEST_TAG" > .last_built_version
            echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup build environment
        if: steps.check.outputs.new_version == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 g++ make python3-pip
          
      - name: Setup Android NDK
        if: steps.check.outputs.new_version == 'true'
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
          add-to-path: false

      - name: Set NDK path
        if: steps.check.outputs.new_version == 'true'
        run: echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Clone Node.js repository
        if: steps.check.outputs.new_version == 'true'
        run: |
          git clone https://github.com/nodejs/node.git
          cd node
          git checkout ${{ steps.check.outputs.version }}
          
      - name: Configure and Build Node.js
        if: steps.check.outputs.new_version == 'true'
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          cd node
          export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang
          export CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++
          export LINK=$CXX
          
          ./configure \
            --dest-cpu=arm64 \
            --dest-os=android \
            --cross-compiling \
            --openssl-no-asm \
            --with-android-ndk=$ANDROID_NDK_ROOT
          
          make -j$(nproc)
          
      - name: Strip binary
        run: |
          cd node
          $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip out/Release/node
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            node/out/Release/node
          name: Node.js for Android ARM64
          body: Automated build of Node.js for Android ARM64
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
